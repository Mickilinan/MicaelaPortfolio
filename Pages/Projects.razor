@page "/projects"
@using MicaelaPortfolio.Models
@using MicaelaPortfolio.Services
@inject ProjectService projectService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager


<PageTitle>Projects | Micaela Nilsson</PageTitle>

<div class="page-header">
    <h1>My Projects</h1>
    <p>A showcase of my work</p>
</div>

<section class="projects-section">
    <div class="projects-grid">
        @foreach (var project in filteredProjects)
        {
            <div class="project-card" data-aos="fade-up" data-aos-delay="@(project.Id * 100)">
                <div class="project-header">
                    <div class="project-icon">
                        <i class="@project.IconClass"></i>
                    </div>
                    @if (!string.IsNullOrEmpty(project.Badge))
                    {
                        <span class="project-badge">@project.Badge</span>
                    }
                </div>
                <div class="project-content">
                    <h3>@project.Title</h3>
                    <p class="project-description">@project.Description</p>
                    <div class="project-tech">
                        @foreach (var tech in project.Technologies.Take(3))
                        {
                            <span class="tech-tag">@tech</span>
                        }
                        @if (project.Technologies.Count > 3)
                        {
                            <span class="tech-tag">+@(project.Technologies.Count - 3)</span>
                        }
                    </div>
                    <div class="project-links">

                        <div class="external-links">
                            @if (!string.IsNullOrEmpty(project.LiveUrl))
                            {
                                <a href="@project.LiveUrl" target="_blank" class="project-link" title="About the game">
                                    <i class="fas fa-external-link-alt"></i>
                                </a>
                            }
                            @if (!string.IsNullOrEmpty(project.GitHubUrl))
                            {
                                <a href="@project.GitHubUrl" target="_blank" class="project-link" title="View Code">
                                    <i class="fab fa-github"></i>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</section>

@code {
    private List<Project> filteredProjects = new List<Project>();


    protected override void OnInitialized()
    {
        filteredProjects = projectService.GetProjects();
    }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initAOS");
        }
    }
}